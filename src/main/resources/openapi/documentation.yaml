openapi: "3.1.0"
info:
  title: "io_github_Lagersystem_Backend API"
  description: "io_github_Lagersystem_Backend API"
  version: "1.0.0"
paths:
  /:
    get:
      description: ""
      responses:
        "301":
          description: "Moved Permanently <br> Redirect"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "/swagger"
  /v1/products:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/NetworkProduct"
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddProductNetworkRequest"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NetworkProduct"
  /v1/products/{id}:
    delete:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NetworkProduct"
    get:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NetworkProduct"
  /v1/products/{id}/move:
    patch:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MoveProductNetworkRequest"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
                Example#2:
                  description: ""
                  value:
                    errors: []
                Example#3:
                  description: ""
                  value:
                    errors: []
                Example#4:
                  description: ""
                  value:
                    errors: []
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NetworkProduct"
  /v1/products/{id}/update:
    patch:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProductNetworkRequest"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
                Example#2:
                  description: ""
                  value:
                    errors: []
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NetworkProduct"
  /v1/spaces:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/NetworkSpace"
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddSpaceNetworkRequest"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NetworkSpace"
  /v1/spaces/{id}:
    delete:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NetworkSpace"
    get:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NetworkSpace"
  /v1/spaces/{id}/move:
    patch:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MoveSpaceNetworkRequest"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
                Example#2:
                  description: ""
                  value:
                    errors: []
                Example#3:
                  description: ""
                  value:
                    errors: []
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NetworkSpace"
  /v1/spaces/{id}/update:
    patch:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSpaceNetworkRequest"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
                Example#2:
                  description: ""
                  value:
                    errors: []
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NetworkSpace"
  /v1/storages:
    get:
      description: ""
      parameters:
        - name: "depth"
          in: "query"
          required: false
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/NetworkStorage"
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddStorageNetworkRequest"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NetworkStorage"
  /v1/storages/{id}:
    delete:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NetworkStorage"
    get:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "depth"
          in: "query"
          required: false
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NetworkStorage"
  /v1/storages/{id}/move:
    patch:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MoveStorageRequest"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
                Example#2:
                  description: ""
                  value:
                    errors: []
                Example#3:
                  description: ""
                  value:
                    errors: []
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NetworkStorage"
  /v1/storages/{id}/update:
    patch:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateStorageNetworkRequest"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
                Example#2:
                  description: ""
                  value:
                    errors: []
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Example#1:
                  description: ""
                  value:
                    errors: []
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NetworkStorage"
components:
  schemas:
    NetworkProduct:
      type: "object"
      properties:
        id:
          type: "string"
        name:
          type: "string"
        description:
          type: "string"
        attributes:
          type: "string"
        spaceId:
          type: "string"
        createdAt:
          type: "string"
        updatedAt:
          type: "string"
      required:
        - "id"
        - "name"
        - "description"
        - "attributes"
        - "spaceId"
        - "createdAt"
    AddProductNetworkRequest:
      type: "object"
      properties:
        name:
          type: "string"
        description:
          type: "string"
        spaceId:
          type: "string"
      required:
        - "name"
        - "description"
        - "spaceId"
    ApiError:
      type: "object"
      properties:
        type:
          type: "string"
        message:
          type: "string"
        context:
          type: "string"
      required:
        - "type"
        - "message"
    Error:
      type: "object"
      properties:
        errors:
          type: "array"
          items:
            $ref: "#/components/schemas/ApiError"
      required:
        - "errors"
    MoveProductNetworkRequest:
      type: "object"
      properties:
        targetSpaceId:
          type: "string"
      required:
        - "targetSpaceId"
    UpdateProductNetworkRequest:
      type: "object"
      properties:
        name:
          type: "string"
        description:
          type: "string"
    NetworkSpace:
      type: "object"
      properties:
        id:
          type: "string"
        name:
          type: "string"
        size:
          type: "number"
          format: "float"
        description:
          type: "string"
        products:
          type: "array"
          items:
            $ref: "#/components/schemas/NetworkProduct"
        storageId:
          type: "string"
        createdAt:
          type: "string"
        updatedAt:
          type: "string"
      required:
        - "id"
        - "name"
        - "description"
        - "storageId"
        - "createdAt"
    AddSpaceNetworkRequest:
      type: "object"
      properties:
        name:
          type: "string"
        size:
          type: "number"
          format: "float"
        description:
          type: "string"
        storageId:
          type: "string"
      required:
        - "name"
        - "description"
        - "storageId"
    MoveSpaceNetworkRequest:
      type: "object"
      properties:
        targetStorageId:
          type: "string"
      required:
        - "targetStorageId"
    UpdateSpaceNetworkRequest:
      type: "object"
      properties:
        name:
          type: "string"
        size:
          type: "number"
          format: "float"
        description:
          type: "string"
    NetworkStorage:
      type: "object"
      properties:
        id:
          type: "string"
        name:
          type: "string"
        description:
          type: "string"
        spaces:
          type: "array"
          items:
            $ref: "#/components/schemas/NetworkSpace"
        subStorages:
          type: "array"
          items:
            $ref: "#/components/schemas/NetworkStorage"
        createdAt:
          type: "string"
        updatedAt:
          type: "string"
      required:
        - "id"
        - "name"
        - "description"
        - "spaces"
        - "subStorages"
        - "createdAt"
    AddStorageNetworkRequest:
      type: "object"
      properties:
        name:
          type: "string"
        description:
          type: "string"
        parentId:
          type: "string"
      required:
        - "name"
        - "description"
    MoveStorageRequest:
      type: "object"
      properties:
        newParentId:
          type: "string"
    UpdateStorageNetworkRequest:
      type: "object"
      properties:
        name:
          type: "string"
        description:
          type: "string"